{"version":3,"sources":["ui/Navbar.js","components/films/GridFilms.js","components/films/Films.js","components/people/GridPeople.js","components/people/People.js","components/planets/GridPlanets.js","components/planets/Planets.js","components/species/GridSpecies.js","components/species/Species.js","components/startships/GridStartShips.js","components/startships/Startships.js","components/vehicles/GridVehicles.js","components/vehicles/Vehicles.js","components/people/PeopleCard.js","components/people/GetPeopleByName.js","router/AppRouter.js","index.js"],"names":["Navbar","className","type","id","to","GridFilms","title","producer","created","edited","opening_crawl","Films","useState","images","setImages","useEffect","info","a","fetch","resp","json","results","films","map","data","name","GridPeople","birth_year","eye_color","People","people","GridPlanets","climate","diameter","gravity","rotation_period","Planets","planets","GridSpecies","average_height","average_lifespan","classification","language","Species","species","GridStartShips","consumables","length","passengers","Startships","startships","GridVehicles","manufacturer","max_atmosphering_speed","Vehicles","console","log","vehicles","PeopleCard","gender","hair_color","height","mass","skin_color","class","GetPeopleByName","useParams","toLocaleLowerCase","resultado","filter","hero","includes","homeworld","starships","AppRouter","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29b4ad2b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <div className=\"container-fluid\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n                    <Link\r\n                        className=\"navbar-brand\"\r\n                        to=\"/\">\r\n                        Star Wars</Link>\r\n\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                className=\"nav-link\"\r\n                                to=\"/films\"\r\n                            >\r\n                                Films</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                className=\"nav-link\"\r\n                                to=\"/people\"\r\n                            >\r\n                                People</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                className=\"nav-link\"\r\n                                to=\"/planets\"\r\n                                >\r\n                                Planet</Link>\r\n                        </li><li className=\"nav-item\">\r\n                            <Link\r\n                                className=\"nav-link\"\r\n                                to=\"/species\"\r\n                                >\r\n                                Species</Link>\r\n                        </li><li className=\"nav-item\">\r\n                            <Link\r\n                                className=\"nav-link\"\r\n                                to=\"/startships\"\r\n                                >\r\n                                Startships</Link>\r\n                        </li><li className=\"nav-item\">\r\n                            <Link\r\n                                className=\"nav-link\"\r\n                                to=\"/vehicles\"\r\n                                >\r\n                                Vehicles</Link>\r\n                        </li>\r\n                    </ul>\r\n\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const GridFilms = ({ title, producer, created, edited, opening_crawl}) => {\r\n\r\n    return (\r\n        <div className=\"card-body m-2\">\r\n            <h4>Title: {title}</h4>\r\n            <p>Producer: {producer}</p>\r\n            <p>Created: {created}</p>\r\n            <p>Edited: {edited}</p>\r\n            <p>Opening Crawl: {opening_crawl}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { GridFilms } from './GridFilms';\r\n\r\nexport const Films = () => {\r\n\r\n    const [images, setImages] = useState([])\r\n\r\n    useEffect(() => {\r\n        info();\r\n    }, [])\r\n\r\n\r\n    const info = async () => {\r\n        const url = 'https://swapi.dev/api/films/'\r\n        const resp = await fetch(url);\r\n        const { results } = await resp.json();\r\n\r\n        const films = results.map(data => {\r\n            return {\r\n                title: data.title,\r\n                producer: data.producer,\r\n                created: data.created,\r\n                opening_crawl: data.opening_crawl,\r\n            }\r\n        })\r\n        setImages(films)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container card-grid\">\r\n            {\r\n                images.map(data => (\r\n                    <GridFilms\r\n                        key={data.name}\r\n                        {...data} />\r\n                ))\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const GridPeople = ({ birth_year, name, created, edited, eye_color, id}) => {\r\n  \r\n    \r\n    return (\r\n        <div className=\"card-body m-2\">\r\n            <h4>Name: {name}</h4>\r\n            <p>Birth Year: {birth_year}</p>\r\n            <p>Created: {created}</p>\r\n            <p>Edited: {edited}</p>\r\n            <p>Eye Color: {eye_color}</p>\r\n            <p>{id}</p>\r\n            <Link to={`./people/${ name }`}\r\n\r\n            >\r\n                More info\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { GridPeople } from './GridPeople';\r\n\r\nexport const People = () => {\r\n\r\n    const [images, setImages] = useState([])\r\n\r\n    useEffect(() => {\r\n        info();\r\n    }, [])\r\n\r\n    const info = async () => {\r\n        const url = 'https://swapi.dev/api/people/'\r\n        const resp = await fetch(url);\r\n        const { results } = await resp.json();\r\n        const people = results.map(data => {\r\n            return {\r\n                name: data.name,\r\n                birth_year: data.birth_year,\r\n                created: data.created,\r\n                edited: data.edited,\r\n                eye_color: data.eye_color,\r\n                id: data.id\r\n            }\r\n        })\r\n        setImages(people)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container card-grid\">\r\n                {\r\n                    images.map(data => (\r\n                        <GridPeople\r\n                            key={data.name}\r\n                            {...data} />\r\n                    ))\r\n                }\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const GridPlanets = ({ name, climate, diameter, gravity, rotation_period}) => {\r\n\r\n    return (\r\n        <div className=\"card-body m-2\">\r\n            <h4>Name: {name}</h4>\r\n            <p>Climate: {climate}</p>\r\n            <p>Diameter: {diameter}</p>\r\n            <p>Gravity: {gravity}</p>\r\n            <p>Rotation Period: {rotation_period}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { GridPlanets } from './GridPlanets';\r\n\r\nexport const Planets = () => {\r\n\r\n    const [images, setImages] = useState([])\r\n\r\n    useEffect(() => {\r\n        info();\r\n    }, [])\r\n\r\n\r\n    const info = async () => {\r\n        const url = 'https://swapi.dev/api/planets/'\r\n        const resp = await fetch(url);\r\n        const { results } = await resp.json();\r\n        \r\n\r\n        const planets = results.map(data => {\r\n            return {\r\n                name: data.name,\r\n                climate: data.climate,\r\n                diameter: data.diameter,\r\n                gravity: data.gravity,\r\n                rotation_period: data.rotation_period,\r\n            }\r\n        })\r\n        setImages(planets)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container card-grid\">\r\n            {\r\n                images.map(data => (\r\n                    <GridPlanets\r\n                        key={data.name}\r\n                        {...data} />\r\n                ))\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const GridSpecies = ({ name, average_height, average_lifespan, classification, language}) => {\r\n\r\n    return (\r\n        <div className=\"card-body m-2\">\r\n            <h4>Name: {name}</h4>\r\n            <p>Average height: {average_height}</p>\r\n            <p>Average lifespan: {average_lifespan}</p>\r\n            <p>Classification: {classification}</p>\r\n            <p>Language : {language}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { GridSpecies } from './GridSpecies';\r\n\r\nexport const Species = () => {\r\n\r\n    const [images, setImages] = useState([])\r\n\r\n    useEffect(() => {\r\n        info();\r\n    }, [])\r\n\r\n\r\n    const info = async () => {\r\n        const url = 'https://swapi.dev/api/species/'\r\n        const resp = await fetch(url);\r\n        const { results } = await resp.json();\r\n\r\n\r\n        const species = results.map(data => {\r\n            return {\r\n                name: data.name,\r\n                average_height: data.average_height,\r\n                average_lifespan: data.average_lifespan,\r\n                classification: data.classification,\r\n                language: data.language,\r\n            }\r\n        })\r\n        setImages(species)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container card-grid\">\r\n            {\r\n                images.map(data => (\r\n                    <GridSpecies\r\n                        key={data.name}\r\n                        {...data} />\r\n                ))\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const GridStartShips = ({ name, consumables, created, length, passengers}) => {\r\n\r\n    return (\r\n        <div className=\"card-body m-2\">\r\n            <h4>Name: {name}</h4>\r\n            <p>Consumables: {consumables}</p>\r\n            <p>Created: {created}</p>\r\n            <p>Length: {length}</p>\r\n            <p>Passengers : {passengers}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { GridStartShips } from './GridStartShips';\r\n\r\nexport const Startships = () => {\r\n\r\n    const [images, setImages] = useState([])\r\n\r\n    useEffect(() => {\r\n        info();\r\n    }, [])\r\n\r\n\r\n    const info = async () => {\r\n        const url = 'https://swapi.dev/api/starships/'\r\n        const resp = await fetch(url);\r\n        const { results } = await resp.json();\r\n\r\n\r\n        const startships = results.map(data => {\r\n            return {\r\n                name: data.name,\r\n                consumables: data.consumables,\r\n                created: data.created,\r\n                length: data.length,\r\n                passengers: data.passengers,\r\n            }\r\n        })\r\n        setImages(startships)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container card-grid\">\r\n            {\r\n                images.map(data => (\r\n                    <GridStartShips\r\n                        key={data.name}\r\n                        {...data} />\r\n                ))\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const GridVehicles = ({ name, consumables, manufacturer, max_atmosphering_speed, passengers}) => {\r\n\r\n    return (\r\n        <div className=\"card-body m-2\">\r\n            <h4>Name: {name}</h4>\r\n            <p>Consumables: {consumables}</p>\r\n            <p>Manufacturer: {manufacturer}</p>\r\n            <p>Max atmosphering Speed: {max_atmosphering_speed}</p>\r\n            <p>Passengers : {passengers}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { GridVehicles } from './GridVehicles';\r\n\r\nexport const Vehicles = () => {\r\n\r\n    const [images, setImages] = useState([])\r\n\r\n    useEffect(() => {\r\n        info();\r\n    }, [])\r\n\r\n\r\n    const info = async () => {\r\n        const url = 'https://swapi.dev/api/vehicles/'\r\n        const resp = await fetch(url);\r\n        const { results } = await resp.json();\r\n        console.log(\"🚀 ~ file: Vehicles.js ~ line 17 ~ info ~ results\", results)\r\n\r\n\r\n        const vehicles = results.map(data => {\r\n            return {\r\n                name: data.name,\r\n                consumables: data.consumables,\r\n                manufacturer: data.manufacturer,\r\n                max_atmosphering_speed: data.max_atmosphering_speed,\r\n                passengers: data.passengers,\r\n            }\r\n        })\r\n        setImages(vehicles)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container card-grid\">\r\n            {\r\n                images.map(data => (\r\n                    <GridVehicles\r\n                        key={data.name}\r\n                        {...data} />\r\n                ))\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const PeopleCard = ({\r\n    birth_year,\r\n    name,\r\n    created,\r\n    edited,\r\n    eye_color,\r\n    gender,\r\n    hair_color,\r\n    height,\r\n    mass,\r\n    skin_color,\r\n}) => {\r\n\r\n    return (\r\n        <div className=\"card border-dark mb-3 mt-3 \" >\r\n            <div class=\"card-header\">Name: {name}</div>\r\n            <div class=\"card-body text-dark\">\r\n                <h5 class=\"card-title\">Name: {name}</h5>\r\n                <p class=\"card-text\">\r\n                    Birth Year: {birth_year} <br />\r\n                    Created: {created} <br />\r\n                    Edited: {edited} <br />\r\n                    Eye Color: {eye_color} <br />\r\n                    Gender: {gender} <br />\r\n                    Hair color: {hair_color} <br />\r\n                    Height: {height} <br />\r\n                    Mass: {mass} <br />\r\n                    Skin color: {skin_color} <br />\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { PeopleCard } from './PeopleCard';\r\n\r\nexport const GetPeopleByName = () => {\r\n\r\n    const { id } = useParams();\r\n    const [images, setImages] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        info();\r\n    }, [])\r\n\r\n    const name = id.toLocaleLowerCase();\r\n    const resultado = images && images.filter(hero => hero.name.toLocaleLowerCase().includes(name))\r\n\r\n    const info = async () => {\r\n        const url = 'https://swapi.dev/api/people/'\r\n        const resp = await fetch(url);\r\n        const { results } = await resp.json();\r\n\r\n        const people = results.map(data => {\r\n            return {\r\n                name: data.name,\r\n                birth_year: data.birth_year,\r\n                eye_color: data.eye_color,\r\n                gender: data.gender,\r\n                hair_color: data.hair_color,\r\n                height: data.height,\r\n                mass: data.mass, \r\n                skin_color: data.skin_color,\r\n                homeworld: data.homeworld,\r\n                films: data.films,\r\n                species: data.species,\r\n                starships: data.starships,\r\n                vehicles: data.vehicles,\r\n                created: data.created,\r\n                edited: data.edited,\r\n                id: data.id,\r\n            }\r\n        })\r\n        setImages(people)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {\r\n                resultado && resultado.map(data => (\r\n                    <PeopleCard\r\n                        key={data.name}\r\n                        {...data} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Navbar } from '../ui/Navbar'\r\nimport {\r\n    HashRouter  as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport { Films } from '../components/films/Films';\r\nimport { People } from '../components/people/People';\r\nimport { Planets } from '../components/planets/Planets';\r\nimport { Species } from '../components/species/Species';\r\nimport { Startships } from '../components/startships/Startships';\r\nimport { Vehicles } from '../components/vehicles/Vehicles';\r\nimport { GetPeopleByName } from '../components/people/GetPeopleByName';\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <>\r\n        <Navbar />\r\n            <Switch>\r\n                    <Route exact path=\"/films\" component={Films} />\r\n                    <Route exact path=\"/people\" component={People} />\r\n                    <Route exact path=\"/people/:id\" component={GetPeopleByName} />\r\n                    <Route exact path=\"/planets\" component={Planets} />\r\n                    <Route exact path=\"/species\" component={Species} />\r\n                    <Route exact path=\"/startships\" component={Startships} />\r\n                    <Route exact path=\"/vehicles\" component={Vehicles} />\r\n                    {/* <Redirect path=\"/\" component={People} /> */}\r\n            </Switch>\r\n</>\r\n            </Router>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AppRouter } from './router/AppRouter';\nimport './index.css'\n\nReactDOM.render(\n  <AppRouter />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}